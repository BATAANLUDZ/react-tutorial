{"version":3,"file":"TimePage.stories-76b25055.js","sources":["../../src/hooks/useDate.ts","../../src/pages/TimePage/TimePage.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useDate = () => {\r\n  const locale = 'en'\r\n  const [currentDate, setCurrentDate] = useState<Date>(new Date())\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentDate(new Date())\r\n    }, 1000)\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n  const day = currentDate.toLocaleDateString(locale, { weekday: 'long' })\r\n  const date = `${day}, ${currentDate.getDate()} ${currentDate.toLocaleDateString(\r\n    locale,\r\n    { month: 'long' },\r\n  )} ${currentDate.getUTCFullYear()}\\n\\n`\r\n\r\n  const hour = currentDate.getHours()\r\n\r\n  const time = currentDate.toLocaleTimeString(locale, {\r\n    hour: '2-digit',\r\n    hour12: true,\r\n    minute: 'numeric',\r\n    second: '2-digit',\r\n  })\r\n\r\n  const timeOnly = time.slice(0, 8)\r\n\r\n  const timeSuffix = time.slice(8, 11)\r\n\r\n  return { date, timeOnly, timeSuffix }\r\n}\r\n","import { useState } from 'react'\r\nimport { Button } from '../../components/Button/Button'\r\nimport { Toggle } from '../../components/Toggle/Toggle'\r\nimport { ButtonStyle } from '../../helpers/enums'\r\nimport { useDate } from '../../hooks/useDate'\r\n\r\nexport default function TimePage() {\r\n  const date = useDate()\r\n  const [workMode, setWorkMode] = useState<boolean>(false)\r\n\r\n  return (\r\n    <div className=\"h-full flex justify-center items-center\">\r\n      <div className=\"border-[1px] border-gray-300 border-opacity-40 border-solid rounded-[100px] shadow-xl inline-flex flex-wrap items-center flex-col gap-3 w-[50vw] py-10\">\r\n        <div>\r\n          <p className=\"text-[40px] text-red-800\">{`${date.date}`}</p>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <p className=\"text-[100px] font-bold\">{`${date.timeOnly}`}</p>\r\n        </div>\r\n        <div>\r\n          <Toggle checked={workMode} onChange={setWorkMode} />\r\n        </div>\r\n        <div>\r\n          <Button\r\n            className=\"h-[100px] w-[200px] text-[40px]\"\r\n            text=\"Time-in\"\r\n            btnType={ButtonStyle.Secondary}\r\n            onClick={() => alert(date.timeOnly)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["useDate","locale","currentDate","setCurrentDate","useState","useEffect","timer","date","time","timeOnly","timeSuffix","TimePage","workMode","setWorkMode","jsxs","jsx","Toggle","Button","ButtonStyle"],"mappings":"0RAEO,MAAMA,EAAU,IAAM,CAC3B,MAAMC,EAAS,KACT,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAe,IAAI,IAAM,EAE/DC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAQ,YAAY,IAAM,CACfH,EAAA,IAAI,IAAM,GACxB,GAAI,EACP,MAAO,IAAM,CACX,cAAcG,CAAK,CAAA,CAEvB,EAAG,CAAE,CAAA,EAEL,MAAMC,EAAO,GADDL,EAAY,mBAAmBD,EAAQ,CAAE,QAAS,OAAQ,MAC9CC,EAAY,aAAaA,EAAY,mBAC3DD,EACA,CAAE,MAAO,MAAO,CAAA,KACbC,EAAY;;EAEJA,EAAY,SAAS,EAE5B,MAAAM,EAAON,EAAY,mBAAmBD,EAAQ,CAClD,KAAM,UACN,OAAQ,GACR,OAAQ,UACR,OAAQ,SAAA,CACT,EAEKQ,EAAWD,EAAK,MAAM,EAAG,CAAC,EAE1BE,EAAaF,EAAK,MAAM,EAAG,EAAE,EAE5B,MAAA,CAAE,KAAAD,EAAM,SAAAE,EAAU,WAAAC,EAC3B,EC5BA,SAAwBC,GAAW,CACjC,MAAMJ,EAAOP,IACP,CAACY,EAAUC,CAAW,EAAIT,WAAkB,EAAK,EAEvD,aACG,MAAI,CAAA,UAAU,0CACb,SAACU,EAAA,KAAA,MAAA,CAAI,UAAU,yJACb,SAAA,CAACC,EAAA,IAAA,MAAA,CACC,eAAC,IAAE,CAAA,UAAU,2BAA4B,SAAG,GAAAR,EAAK,OAAO,CAC1D,CAAA,EACAQ,EAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,IAAE,CAAA,UAAU,yBAA0B,SAAA,GAAGR,EAAK,UAAW,CAAA,EAC5D,EACAQ,EAAAA,IAAC,OACC,SAACA,EAAA,IAAAC,EAAA,CAAO,QAASJ,EAAU,SAAUC,EAAa,CACpD,CAAA,QACC,MACC,CAAA,SAAAE,EAAA,IAACE,EAAA,CACC,UAAU,kCACV,KAAK,UACL,QAASC,EAAY,UACrB,QAAS,IAAM,MAAMX,EAAK,QAAQ,CAAA,CAAA,EAEtC,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}